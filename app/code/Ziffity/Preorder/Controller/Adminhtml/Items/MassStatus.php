<?php
/**
 * @category   Ziffity
 * @package    Ziffity_Preorder
 * @author     ramesh.rajan@ziffity.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */


namespace Ziffity\Preorder\Controller\Adminhtml\Items;

use Magento\Backend\App\Action\Context;
use Magento\Framework\View\Result\PageFactory;
use Magento\Framework\Controller\ResultFactory;
use Magento\Ui\Component\MassAction\Filter;
use Ziffity\Preorder\Model\ResourceModel\Preorder\CollectionFactory;


class MassStatus extends \Magento\Backend\App\Action
{
    /**
     * @var Filter
     */
    protected $filter;

    /**
     * @var CollectionFactory
     */
    protected $collectionFactory;

    protected $_inlineTranslation;
    protected $_transportBuilder;
    protected $_scopeConfig;
    protected $_logLoggerInterface;

    /**
     * @param Context $context
     * @param Filter $filter
     * @param CollectionFactory $collectionFactory
     */
    public function __construct(
        Context $context, 
        Filter $filter, 
        CollectionFactory $collectionFactory, 
        \Magento\Framework\Translate\Inline\StateInterface $inlineTranslation,
        \Magento\Framework\Mail\Template\TransportBuilder $transportBuilder,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        \Psr\Log\LoggerInterface $loggerInterface,
        array $data = []
    )
    {
        $this->filter = $filter;
        $this->collectionFactory = $collectionFactory;
        $this->_inlineTranslation = $inlineTranslation;
        $this->_transportBuilder = $transportBuilder;
        $this->_scopeConfig = $scopeConfig;
        $this->_logLoggerInterface = $loggerInterface;   
        $this->messageManager = $context->getMessageManager();
        parent::__construct($context);
    }

    /**
     * Execute action
     *
     * @return \Magento\Backend\Model\View\Result\Redirect
     * @throws \Magento\Framework\Exception\LocalizedException|\Exception
     */
    public function execute()
    {
        $collection = $this->filter->getCollection($this->collectionFactory->create());
        $collectionSize = $collection->getSize();
        $this->_inlineTranslation->suspend();
        $main_email="ramesh.rajan@ziffity.com";
        $sender = [
            'name' => "Wholesale Form",
            'email' => $main_email
        ]; 

        foreach ($collection as $record) {            
            $record->setStatus($this->getRequest()->getParam('status'))->save();
            $email = $record->getData('email');
            $productId = $record->getData('product_id');
            $first_name = $record->getData('first_name');
            $last_name = $record->getData('last_name');

            $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
            $product = $objectManager->create('Magento\Catalog\Model\Product')->load($productId);

            $productName =  $product->getName(); //Get Product Name
            if($this->getRequest()->getParam('status') == 'approved'){
                $transport = $this->_transportBuilder
                ->setTemplateIdentifier('approved_preorder')
                ->setTemplateOptions(
                    [
                        'area' => 'frontend',
                        'store' => \Magento\Store\Model\Store::DEFAULT_STORE_ID,
                    ]
                    )
                    ->setTemplateVars([
                                            
                        'email'  => $email,
                        'product_name' =>$productName,
                        'first_name' => $first_name,
                        'last_name' => $last_name             
                    ])
                    ->setFrom($sender)
                    ->addTo( $email,'owner')
                    ->getTransport();                                
                    $transport->sendMessage(); 
            }else{
                $transport = $this->_transportBuilder
                ->setTemplateIdentifier('declined_preorder')
                ->setTemplateOptions(
                    [
                        'area' => 'frontend',
                        'store' => \Magento\Store\Model\Store::DEFAULT_STORE_ID,
                    ]
                    )
                    ->setTemplateVars([
                                            
                        'email'  => $email,
                        'product_name' =>$productName,
                        'first_name' => $first_name,
                        'last_name' => $last_name             
                    ])
                    ->setFrom($sender)
                    ->addTo( $email,'owner')
                    ->getTransport();                                
                    $transport->sendMessage(); 
            }
                                  
        }
        if($this->getRequest()->getParam('status') == 'approved'){$status = 'Approved';}else{$status = 'Denied';}
        $this->messageManager->addSuccess(__('A total of %1 record(s) have been '.$status, $collectionSize));

        /** @var \Magento\Backend\Model\View\Result\Redirect $resultRedirect */
        $resultRedirect = $this->resultFactory->create(ResultFactory::TYPE_REDIRECT);
        return $resultRedirect->setPath('*/*/');
    }
}